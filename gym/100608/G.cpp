#include <bits/stdc++.h>
using namespace std;

#define endl '\n'

typedef long long ll;
typedef pair<int, int> pii;



int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	freopen("greater.in", "r", stdin);
	freopen("greater.out", "w", stdout);
//
	cout << setprecision(10) << fixed;

	map<pii, pair<double, double>> M;

	M[{2 , 1}] = {0.2500000000,0.2500000000 };
	M[{2 , 2}] = {0.3125000000,0.3125000000 };
	M[{2 , 3}] = {0.3437500000,0.3437500000 };
	M[{2 , 4}] = {0.3632812500,0.3632812500 };
	M[{2 , 5}] = {0.3769531250,0.3769531250 };
	M[{2 , 6}] = {0.3872070312,0.3872070312 };
	M[{2 , 7}] = {0.3952636719,0.3952636719 };
	M[{3 , 1}] = {0.3333333333,0.3333333333 };
	M[{3 , 2}] = {0.4197530864,0.4074074074 };
	M[{3 , 3}] = {0.4513031550,0.4320987654 };
	M[{3 , 4}] = {0.4657826551,0.4415485444 };
	M[{3 , 5}] = {0.4737760165,0.4466290708 };
	M[{4 , 1}] = {0.3750000000,0.3750000000 };
	M[{4 , 2}] = {0.4453125000,0.4296875000 };
	M[{4 , 3}] = {0.4733886719,0.4453125000 };
	M[{4 , 4}] = {0.4824829102,0.4500732422 };
	M[{5 , 1}] = {0.4000000000,0.4000000000 };
	M[{5 , 2}] = {0.4640000000,0.4464000000 };
	M[{5 , 3}] = {0.4813440000,0.4466560000 };
	M[{5 , 4}] = {0.4881945600,0.4486016000 };
	M[{6 , 1}] = {0.4166666667,0.4166666667 };
	M[{6 , 2}] = {0.4714506173,0.4498456790 };
	M[{6 , 3}] = {0.4821459191,0.4486454047 };
	M[{6 , 4}] = {0.4883729376,0.4430863959 };
	M[{7 , 1}] = {0.4285714286,0.4285714286 };
	M[{7 , 2}] = {0.4752186589,0.4556434819 };
	M[{7 , 3}] = {0.4847470017,0.4497020799 };
	M[{8 , 1}] = {0.4375000000,0.4375000000 };
	M[{8 , 2}] = {0.4794921875,0.4572753906 };
	M[{8 , 3}] = {0.4870758057,0.4495086670 };
	M[{9 , 1}] = {0.4444444444,0.4444444444 };
	M[{9 , 2}] = {0.4798049078,0.4587715287 };
	M[{9 , 3}] = {0.4862647029,0.4474984053 };
	M[{10 , 1}] = {0.4500000000,0.4500000000 };
	M[{10 , 2}] = {0.4825000000,0.4601000000 };
	M[{10 , 3}] = {0.4860210000,0.4487690000 };

	int d, b;
	while(cin >> d >> b && (d + b)){

		if(M.find({b, d}) == M.end())
			assert(false);
		cout << M[{b, d}].first << " " << M[{b, d}].second << endl;

	}


	return 0;
}